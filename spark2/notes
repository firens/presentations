Intro :

Is there anyone who never heard of Apache Spark ?
Who among you used it even once and knows the concept of RDDs (Resilient Distributed Datasets) ?

What is Spark ?

Used in 2014 to win a competition for sorting a Petabyte of data in 4h

Spark 2 features :

TPC-DS queries
99 queries that any Big Data processing tool should be able to handle
 includes a very large percentage of the SQL 2003 standard
 => you can do about every operations you might want to perform on an SQL database

partition size from 50 to 200MB , standard setting
1 partition by core


Dataset APIs :

All 3 are compatible and can be used one after the other on the same set of data

-

Analysis errors caught before distributed batch job starts, probably through Catalyst attempts

-

Catalyst : in the demo show execution plan

-

Optimizations :
Full power of relational engine
In contrast, getting the same performance using RDDs would require users to manually consider how to express the computation in a way that parallelizes optimally.
Since Spark understands the structure of data in Datasets, it can create a more optimal layout in memory when caching Datasets.

SparkSession :

Before : sqlContext/

    HiveContext : work with Hive and window functions

    Window functions allow users of Spark SQL to calculate results such as the rank of a given row or a moving average over a range of input rows.

    Apache Hive is a data warehouse infrastructure built on top of Hadoop for providing data summarization, query, and analysis

In spark 2 :

    Not all problems solved : you still need Hive dependencies to use features such as window functions

Tungsten :

    Object "abcd" = 4 bytes value + 44 bytes of Java Object description = 48 bytes !!

    No virtual function dispatches: this reduces multiple CPU calls
    which can have a profound impact on performance when dispatching billions of times.

    Intermediate data in memory vs CPU registers: Tungsten Phase 2 places intermediate data into CPU registers.
    This is an order of magnitudes reduction in the number of cycles to obtain data from the CPU registers instead of from memory